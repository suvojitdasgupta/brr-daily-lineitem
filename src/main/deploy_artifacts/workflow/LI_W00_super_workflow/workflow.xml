<workflow-app name="LI_W00_super_workflow" xmlns="uri:oozie:workflow:0.5" xmlns:sla="uri:oozie:sla:0.2">
	<global>
		<job-tracker>${jobTracker}</job-tracker>
		<name-node>${nameNode}</name-node>
		<configuration>
		<!-- HDFS App Directories --> 
			<property>
			    <name>brrLineItemCoordinatorDir</name>
			    <value>${brrLineItemAppDir}/coordinator</value>
			</property>
			<property>
			    <name>brrLineItemWorkflowDir</name>
			    <value>${brrLineItemAppDir}/workflow</value>
			</property>
			<property>
			    <name>brrLineItemPigDir</name>
			    <value>${brrLineItemAppDir}/pig</value>
			</property>
			<property>
			    <name>brrLineItemShellDir</name>
			    <value>${brrLineItemAppDir}/shell</value>
			</property>
			<property>
			    <name>brrLineItemLibDir</name>
			    <value>${brrLineItemAppDir}/lib</value>
			</property>
			<!-- HDFS Data Directories -->
			<property>
				<name>brrLineItemTmpDir</name>
				<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/tmp</value>
			</property>
			<property>
				<name>brrLineItemExternalDir</name>
				<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/external</value>
			</property>
			<property>
				<name>brrLineItemSqoopDir</name>
				<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/sqoop</value>
		    </property>
            <property>
				<name>brrLineItemInterimDir</name>
            	<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/interim</value>
            </property>
            <property>
				<name>brrLineItemOutputDir</name>
            	<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/output</value>
            </property>
            <property>
				<name>brrLineItemRejectsDir</name>
            	<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/rejects</value>
            </property>
            <property>
				<name>brrLineItemFinalDir</name>
            	<value>${brrLineItemAppDir}/data/${formattedSegmentDate}/final</value>
            </property>
            <property>
				<name>brrLineItemRecycleDir</name>
            	<value>${brrLineItemAppDir}/data/${formattedPreviousSegmentDate}/output</value>
            </property>
            <!-- S3 Directories --> 
            <property>
                <name>brrChargesSqoopS3Dir</name>
                <value>${brrChargesDataBaseS3Dir}/${formattedSegmentDate}/lookup/sqoop</value>
            </property>         
            <property>
                <name>brrLineItemExternalS3Dir</name>
                <value>${brrLineItemExternalBaseS3Dir}/${formattedSegmentDate}/brrOBILookupDir</value>
            </property>
            <property>
                <name>brrLineItemSqoopS3Dir</name>
                <value>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/sqoop</value>
            </property>
            <property>
                <name>brrLineItemInterimS3Dir</name>
                <value>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/interim</value>
            </property>
            <property>
               <name>brrLineItemOutputS3Dir</name>
               <value>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/output</value>
            </property>
            <property>
               <name>brrLineItemRejectsS3Dir</name>
               <value>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/reject</value>
            </property>
            <property>
               <name>brrLineItemFinalS3Dir</name>
               <value>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/final</value>
            </property>
            <property>
               <name>brrLineItemRecycleS3Dir</name>
               <value>${brrLineItemDataBaseS3Dir}/${formattedPreviousSegmentDate}/output</value>
            </property>
            <property>
               <name>brrLineItemDBS3Dir</name>
               <value>${brrLineItemDBS3Dir}</value>
            </property>
            <property>
               <name>brrLineItemConfigS3Dir</name>
               <value>${brrLineItemConfigS3Dir}</value>
            </property>
            <property>
               <name>brrLineItemStatusS3Dir</name>
               <value>${brrLineItemStatusBaseS3Dir}/${formattedSegmentDate}/</value>
            </property>	  
		</configuration>
	</global>
	
	<start to="LI_W01A_s3_to_hdfs" />
	
	<action name="LI_W01A_s3_to_hdfs">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01A_s3_to_hdfs</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W00_skipW01BCD_Switch" />
		<error to="SendFailureAlertEmail" />
	</action>
		
	<decision name="LI_W00_skipW01BCD_Switch">
		<switch>
			<case to="LI_W01A_s3_to_hdfs_sqoop">${firstNotNull(wf:conf('skipW01BCD'), 'False') eq 'True'}</case>
			<default to="LI_W00_fork_1" />
		</switch>
	</decision>
		
	<action name="LI_W01A_s3_to_hdfs_sqoop">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01A_s3_to_hdfs_sqoop</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W01E_address_skipW01BCD_True" />
		<error to="SendFailureAlertEmail" />
	</action>
	
	<action name="LI_W01E_address_skipW01BCD_True">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01E_address</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W02_bps" />
		<error to="SendFailureAlertEmail" />
	</action>
	
		
	<fork name="LI_W00_fork_1">
		<path start="LI_W01B_sqoop" />
		<path start="LI_W01C_sqoop" />
		<path start="LI_W01D_sqoop" />
	</fork>
		
	<action name="LI_W01B_sqoop">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01B_sqoop</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W00_join_1" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W01C_sqoop">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01C_sqoop</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W00_join_1" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W01D_sqoop">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01D_sqoop</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W00_join_1" />
		<error to="SendFailureAlertEmail" />
	</action>
	
	<join name="LI_W00_join_1" to="LI_W00_fork_2" />
	
	<fork name="LI_W00_fork_2">
		<path start="LI_W01E_address_skipW01BCD_False" />
		<path start="LI_W07_s3_cleanup" />
	</fork>
	
	<action name="LI_W01E_address_skipW01BCD_False">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W01E_address</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W00_join_2" />
		<error to="SendFailureAlertEmail" />
	</action>
	
	<action name='LI_W07_s3_cleanup'>
		<shell xmlns="uri:oozie:shell-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<exec>LI_W07_s3_cleanup.sh</exec>
			<!-- Instead of using ${brrLineItemSqoopS3Dir} using the full construct due to the way variables are resolved in Oozie -->
			<argument>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/sqoop</argument>
			<file>${brrLineItemAppDir}/shell/LI_W07_s3_cleanup.sh#LI_W07_s3_cleanup.sh</file>
		</shell>
		<ok to="LI_W07_hdfs_to_s3_sqoop" />
		<error to="kill" />
	</action>

	<action name="LI_W07_hdfs_to_s3_sqoop">
		<distcp xmlns="uri:oozie:distcp-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/sqoop" />
			</prepare>
			<arg>-strategy</arg>
			<arg>dynamic</arg>
			<!-- Instead of using ${brrLineItemSqoopDir} using the full construct due to the way variables are resolved in Oozie -->
			<arg>${brrLineItemAppDir}/data/${formattedSegmentDate}/sqoop</arg>
			<!-- Instead of using ${brrLineItemSqoopS3Dir} using the full construct due to the way variables are resolved in Oozie -->
			<arg>${brrLineItemDataBaseS3Dir}/${formattedSegmentDate}/sqoop</arg>
		</distcp>
		<ok to="LI_W00_join_2" />
		<error to="kill" />
    </action>
    
    <join name="LI_W00_join_2" to="LI_W02_bps" />
	
	<action name="LI_W02_bps">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W02_bps</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W03_ar_initial" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W03_ar_initial">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W03_ar_initial</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W04_ar_trans_type" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W04_ar_trans_type">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W04_ar_trans_type</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W05_ar_crypto" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W05_ar_crypto">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W05_ar_crypto</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W06_dvt_brr" />
		<error to="SendFailureAlertEmail" />
	</action>

	<action name="LI_W06_dvt_brr">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W06_dvt_brr</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="LI_W07_hdfs_to_s3" />
		<error to="SendFailureAlertEmail" />
	</action>
	
	<action name="LI_W07_hdfs_to_s3">
		<sub-workflow>
			<app-path>${brrLineItemAppDir}/workflow/LI_W07_hdfs_to_s3</app-path>
			<propagate-configuration />
		</sub-workflow>
		<ok to="end" />
		<error to="SendFailureAlertEmail" />
	</action>
	
	<action name='SendFailureAlertEmail'>
		<shell xmlns="uri:oozie:shell-action:0.1">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<exec>sendErrorEmail.sh</exec>
			<!-- Instead of using ${brrLineItemConfigS3Dir} using the full construct due to the way variables are resolved in Oozie-->
			<argument>${brrLineItemConfigS3Dir}</argument>
			<argument>${segmentDate}</argument>
			<argument>${segmentDate}</argument>
			<argument>${wf:id()}</argument>
			<argument>Action failed, error
				      message[${wf:errorMessage(wf:lastErrorNode())}]</argument>
			<argument>${ENV}</argument>
			<file>${brrLineItemAppDir}/shell/sendErrorEmail.sh#sendErrorEmail.sh</file>
		</shell>
		<ok to="kill" />
		<error to="kill" />
	</action>

	<kill name="kill">
		<message>Action failed, error
			message[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>
	<end name="end" />
</workflow-app>